#PBS -S /bin/bash
#PBS -V
### Note for higher res products, need more memory, use fewer cpus
### Note: parallel cannot efficiently spawn jobs to many nodes if they finish in <30 sec, scale accordingly
##PBS -lselect=64:model=ivy
##PBS -lselect=24:model=has
#PBS -lselect=20:model=bro
#PBS -lwalltime=2:00:00
#PBS -q devel 

#To submit:
#qsub ~/src/demcoreg/demcoreg/dem_align_parallel.pbs

#To check progress
#ssh $(qstat -u deshean -W o=+rank0 | tail -n 1 | awk '{print $NF}')
#cd /PBS/spool

#Jobs can fail if stdout or stderr are >200MB
#Turn off automatic ls after cd
unset -f cd

#Set resource limits for max open files, no core dumps
ulimit -S -n 65536 -c 0

export GDAL_MAX_DATASET_POOL_SIZE=32768

#The ls -H here dereferences links
#Can shuffle sizes with `shuf` utility

#HMA
#rpcdem=/nobackup/deshean/rpcdem/hma/srtm1/hma_srtm_gl1.vrt
#rpcdem=/nobackup/deshean/data/nasadem/hma/hgt_srtmOnly_R4/srtmOnly.hgt/hma_nasadem_hgt_srtmOnly_R4_srtmOnly.hgt.vrt
#rpcdem=/nobackup/deshean/data/nasadem/hma/hgt_srtmOnly_R4/srtmOnly.hgt/hma_nasadem_hgt_srtmOnly_R4_srtmOnly.hgt_shift.vrt
#rpcdem=/nobackup/deshean/data/nasadem/hma/hgt_srtmOnly_R4/srtmOnly.hgt/hma_nasadem_hgt_srtmOnly_R4_srtmOnly.hgt_aea.tif
#rpcdem=/nobackup/deshean/data/nasadem/hma/hgt_srtmOnly_R4/srtmOnly.hgt/hma_nasadem_hgt_srtmOnly_R4_srtmOnly.hgt_lt5m_err_aea.tif
#rpcdem=/nobackup/deshean/data/nasadem/hma/hgt_merge/hgt/hma_nasadem_hgt_merge_hgt_adj_aea.tif
#rpcdem=/nobackup/deshean/data/nasadem/hma/hgt_merge/hgt/hma_nasadem_hgt_merge_hgt_adj.vrt
#rpcdem=/nobackup/deshean/data/tandemx/hma/TDM1_DEM_90m_hma_DEM.vrt
#rpcdem=/nobackup/deshean/data/tandemx/hma/TDM1_DEM_90m_hma_DEM_lt1.5m_err.vrt
rpcdem=/nobackup/deshean/data/tandemx/hma/mos/TDM1_DEM_90m_hma_DEM_masked.vrt
#rpcdem=/nobackup/deshean/data/tandemx/hma/TDM1_DEM_90m_hma_DEM_aea.tif
topdir=/nobackup/deshean/hma/dem_coreg
#topdir=/nobackup/deshean/hma/aster/dsm

#CONUS
#rpcdem=/nobackup/deshean/data/nasadem/conus/hgt_merge/hgt/conus_nasadem_hgt_merge_hgt_adj.vrt
#topdir=/nobackup/deshean/conus_combined/dem_coreg_nasadem

cd $topdir
#mkdir $topdir/log

###
### Filtering
###

#Filter
#max_dz=100
#max_dz=200

#done=$(ls -Sr *00/dem*/*dzfilt*tif)
#fn_list=$(ls -Sr *00/dem*/*DEM_*m.tif)
#notdone=""; for i in $fn_list ; do if ! echo $done | grep -q $(dirname $i) ; then notdone+=" $i" ; fi ; done
#parallel -j 10 --sshloginfile $PBS_NODEFILE "cd $topdir; ~/src/dgtools/dgtools/filter.py {} -filt dz -param $rpcdem -${max_dz} ${max_dz}" ::: $notdone

#fn_list=$(ls -Sr *00/dem*/*DEM_{32,8,2}m.tif)
#fn_list=$(ls -S *00/dem*/*DEM_2m.tif)
##parallel -j 10 --delay 0.1 --verbose --sshloginfile $PBS_NODEFILE "cd $topdir; if [ ! -e {.}_dzfilt_-${max_dz}_${max_dz}.tif ] ; then ~/src/pygeotools/pygeotools/filter.py {} -filt dz -param $rpcdem -${max_dz} ${max_dz} ; fi " ::: $fn_list
#parallel -j 6 --sshloginfile $PBS_NODEFILE "unset -f cd; cd $topdir; ~/src/pygeotools/pygeotools/filter.py {} -filt dz -param $rpcdem -${max_dz} ${max_dz}" ::: $fn_list

#fn_list=$(ls -S *00/dem*/*DEM_8m.tif)
#parallel -j 20 --sshloginfile $PBS_NODEFILE "unset -f cd; cd $topdir; ~/src/pygeotools/pygeotools/filter.py {} -filt dz -param $rpcdem -${max_dz} ${max_dz}" ::: $fn_list

#fn_list=$(ls -S *00/dem*/*DEM_32m.tif)
#parallel --sshloginfile $PBS_NODEFILE "unset -f cd; cd $topdir; ~/src/pygeotools/pygeotools/filter.py {} -filt dz -param $rpcdem -${max_dz} ${max_dz}" ::: $fn_list

###
### Co-registration
###

#max_offset=100
max_offset=20
#max_offset=10

#Do tiltcorr with crosstrack
fn_list=$(ls -H -S *DEM_8m_dzfilt*.tif | shuf)
if [ ! -d $log ] ; then
    mkdir -pv log
fi
parallel -j 20 --sshloginfile $PBS_NODEFILE "unset -f cd; cd $topdir; if [ ! -e {.}*align/*align.tif ] ; then ~/src/demcoreg/demcoreg/dem_align.py $rpcdem {} -max_offset $max_offset -filter 'none' -tiltcorr | tee log/{.}.log; fi" ::: $fn_list

#For ASTER, now run abs_dz filter after co-registration
#fn_list=$(ls -S 2*/*align/*align.tif)
#parallel -j 28 --workdir $topdir --sshloginfile $PBS_NODEFILE "~/src/pygeotools/pygeotools/filter.py {} -filt dz -param $rpcdem -${max_dz} ${max_dz}" ::: $fn_list
